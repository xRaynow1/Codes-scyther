const kab:  SessionKey;

protocol carlson(A,B,S) {

secret kas,kbs:SessionKey; 


	role A {

		fresh Na:Nonce;
		var Nb,Nb1:Nonce;
		var kab:SessionKey;
		

		send_1(A,B,A,Na); 
		recv_4(B,A,{Na,B,kab}kas,{Na}kab,Nb1);
		send_5(A,B,{Nb1}kab);
		claim_A1(A,Secret,kab);
		claim_A2(A,Nisynch);
		

		}


	role B {

		var Na:Nonce;
		fresh Nb,Nb1:Nonce;
		var kab:SessionKey;
		

		recv_1(A,B,A,Na);
		send_2(B,S,A,Na,B,Nb);
		recv_3(S,B,{kab,Nb,A}kbs,{Na,B,kab}kas);
		send_4(B,A,{Na,B,kab}kas,{Na}kab,Nb1);
		recv_5(A,B,{Nb1}kab);
		claim_B1(B,Secret,kab);   
		claim_B2(B,Nisynch);
		
		}


	role S {

		var Na,Nb:Nonce;
		

		recv_2(B,S,A,Na,B,Nb);
		send_3(S,B,{kab,Nb,A}kbs,{Na,B,kab}kas);
		claim_S1(S,Secret,kab);            
		claim_S2(S,Nisynch);
		
		}
}


const kab:  SessionKey;
const eve :Agent ;
untrusted eve ; 
compromised kab(eve); 


